1.valueAsNumber
用javaScript可以读取当前元素的当前值，但返回值往往是字符串。虽然用parseFloat可以将值转为浮点型，但HTML5有一个新的解决办法，那就是利用valueAsNumber属性

2.!!
if(!!qtyFields[i].valueAsNumber){
	//测试valueAsNumber属性的存在性。!!用于将valueAsNumber属性值强制转换成布尔类型。
	//第一个!的作用是将属性值转变成布尔值，并对该值取非
	//第二个!则再次取非
}

3.data-*属性的值
代码中用data-price属性定义出产品的价格，可以用以下代码取回
var price = element.dataset.price;
加入用连字符data-*属性名，那么dataset属性将会将它以驼峰命名法表现出来。
例如：如果属性名为data-person-name,那么读取的时候就需要这么写:element.dataset.personName,而不能用element.dataset-name
这个属性是html5新引入的，还未能被所有浏览器所支持。幸好，有一种适用于所有浏览器的回退方案：
var price = element.getAttribute('data-price');

4.如何使用validation属性和方法来设置自定义的验证测试
5.如何使用invalid事件来侦测已提交表单中的无效字段
6.如何使用CSS3中新增的伪类选择器为无效字段应用样式，而无需再输入元素中加入过多的类名